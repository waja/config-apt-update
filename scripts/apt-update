#!/bin/sh
HASHFILE="/var/lib/config-apt-update/hostname.hash"

if [ -f /etc/default/config-apt-update ]
then
	. /etc/default/config-apt-update
	if [ -z "$EMAIL" ]
	then
		echo "#### WARNING ####"
		echo "EMAIL in /etc/default/config-apt-update not set!"
		echo "#################"
	        exit 0
	fi
else
	echo "#### WARNING ####"
	echo "/etc/default/config-apt-update is missing!"
	echo "#################"
	exit 0
fi

if [ -f ${HASHFILE} ]
then
	. ${HASHFILE}
fi

TMPMAIL="`mktemp`"
# get hostname from address
getaddress()
{
	if [ ! ${IFACE} ]
	then
		IFACE="`/sbin/route -n | grep ^0.0.0.0 | awk ' { print $8 }'`"
	fi
	IP="`LC_ALL=en /sbin/ifconfig ${IFACE} | sed -n -e'/inet addr:/s/^.*inet addr:\([0-9.]*\).*$/\1/p'`"
	if [ -x /usr/bin/host ]
	then
		if [ `LC_ALL=en /usr/bin/host ${IP} | tail -1 | awk ' { print $3 }'` != not ]
			then
			ADDRESS="`LC_ALL=en /usr/bin/host ${IP} | tail -1 | awk ' { print $5 }'`"
		fi
	else
		ADDRESS="${IP}"
	fi

	if [ -z "${ADDRESS}" ]
	then
		ADDRESS="`/bin/hostname -f`"
	fi
}

# get new packages list
apt-get update > /dev/null

# remove leading and trailing whitespaces from value
EXCLUDE="`echo ${EXCLUDE} | sed 's/^[ \t]*//;s/[ \t]*$//'`"

if [ -z "${EXCLUDE}" ]
then
	if [ "`apt-get --just-print -u upgrade | grep '^Inst ' | awk ' { print $2 }' | wc -l`" -gt "0" ]
	then
		getaddress
		echo -e "apt-get upgrade would like to install these packages:\n" > "${TMPMAIL}"
		apt-get --just-print -u upgrade | grep '^Inst ' | awk ' { print $2 }' >> "${TMPMAIL}"
		${MAIL} ${EMAIL} -s "Updates available on ${ADDRESS}" < "${TMPMAIL}"
		rm -f "${TMPMAIL}"
	fi
else
	if [ "`apt-get --just-print -u upgrade | grep '^Inst ' | grep -v -E "${EXCLUDE}" | awk ' { print $2 }' | wc -l`" -gt "0" ]
	then
		getaddress
		echo -e "apt-get upgrade would like to install these packages:\n" > "${TMPMAIL}"
		apt-get --just-print -u upgrade | grep '^Inst ' | grep -v -E "${EXCLUDE}" | awk ' { print $2 }' >> "${TMPMAIL}"
		${MAIL} ${EMAIL} -s "Updates available on ${ADDRESS}" < "${TMPMAIL}"
		rm -f "${TMPMAIL}"
	fi
fi

if [ "$XMLEXPORT" = "1" ]
then
	if [ -z "${HASH}" ]
	then
		HASH="`echo $ADDRESS | sha512sum | awk ' { print $1 }'`"
		sed -i -e "s/\(HASH=[^'\"]*['\"]\)[^'\"]*\(['\"].*\)/\1${HASH}\2/" "${HASHFILE}"
	fi
	if [ "`apt-get --just-print -u upgrade | grep '^Inst ' | awk ' { print $2 }' | wc -l`" -gt "0" ]
	then
		TIMESTAMP="`date +%s`"
		echo "${HASH}"
		getaddress
		echo -e "<UpdateReport>" > "${TMPMAIL}"
		echo -e "\t<hostname>${ADDRESS}</hostname>" >> "${TMPMAIL}"
		echo -e "\t<hash>${HASH}</hash>" >> "${TMPMAIL}"
		echo -e "\t<timestamp>${TIMESTAMP}</timestamp>" >> "${TMPMAIL}"
		apt-get --just-print -u upgrade | grep '^Inst ' | awk ' { print "\t\t<package>\n\t\t\t<name>"$2"</name>\n" "\t\t\t<installedVersion>"$3"</installedVersion>\n" "\t\t\t<updatedVersion>"$4")</updatedVersion>\n\t\t</package>" }' >> "${TMPMAIL}"
		echo -e "</UpdateReport>" >> "${TMPMAIL}"
		${MAIL} ${EMAIL} -s "Updates available on ${ADDRESS} (XML format)" < "${TMPMAIL}"
		rm -f "${TMPMAIL}"
	fi

fi
